name: Auto Firmware Dumper Beta

on:
  workflow_dispatch:
    inputs:
      FIRMWARE_URL:
        description: 'Stock ROM Link'
        required: true
        default: ''
      DEVICE_CODENAME:
        description: 'Device Codename'
        required: true
        default: ''
      DEVICE_BRAND:
        description: 'Device Brand'
        required: true
        default: ''
      DEVICE_VERSION:
        description: 'Android Version'
        required: true
        default: ''
      UPLOAD_LINEAGE_DT:
        description: 'Create LineageOS DT Repo (For approval= true)'
        required: false
        default: ''
      UPLOAD_TWRP_DT:
        description: 'Create TWRP DT Repo (For approval= true)'
        required: false
        default: ''
      USER_NAME:
        description: 'Name in Github Account'
        required: true
        default: ''
      USER_EMAIL:
        description: 'E-mail in Github Account'
        required: true
        default: ''

jobs:
  build:
    name: Auto Firmware Dumper
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    env:
      TWT: ${{ github.event.inputs.UPLOAD_TWRP_DT }}
      LOT: ${{ github.event.inputs.UPLOAD_LINEAGE_DT }}
      FUR: ${{ github.event.inputs.FIRMWARE_URL }}
      DCN: ${{ github.event.inputs.DEVICE_CODENAME }}
      DB: ${{ github.event.inputs.DEVICE_BRAND }}
      UN: ${{ github.event.inputs.USER_NAME }}
      UEM: ${{ github.event.inputs.USER_EMAIL }}
      AV: ${{ github.event.inputs.DEVICE_VERSION }}
      RN: dump_${{ github.event.inputs.DEVICE_BRAND }}_${{ github.event.inputs.DEVICE_CODENAME }}
    permissions:
      contents: write
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      # That's it! Now use your normal steps
    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12
        
    - name: Prepare GithubCLI
      run: |
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
        && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
        && sudo apt update \
        && sudo apt install gh -y
        
    - name: Update Packages
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install cpio aria2 git python3 neofetch
        
    - name: Install OpenJDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '8'
        
    - name: Ä°nstalling DumprX
      run: |
        cd /home
        sudo mkdir Auto-Dumper
        sudo chmod 777 Auto-Dumper
        cd Auto-Dumper
        git clone https://github.com/DumprX/DumprX
        cd DumprX
        sudo chmod 777 setup.sh
        sudo chmod 777 dumper.sh
        ./setup.sh
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Creating Dump
      run: |
        cd /home/Auto-Dumper/DumprX
        ./dumper.sh ${{ env.FUR }}
        sudo chmod -R 777 out

    - name: Setting up git
      run: |
        git config --global user.name "${{ env.UN }}" && git config --global user.email "${{ env.UEM }}"

    - name: Uploading ROM Dump
      run: |
        cd /home/Auto-Dumper/DumprX/out
        git lfs install
        sudo chmod -R 777 *
        check_los_dt=$(basename lineage-device-tree)
        if [ -f "$check_los_dt" ]; then
        cp -r lineage-device-tree /home/Auto-Dumper
        if [ ! -f "$check_los_dt" ]; then
        echo "No LineageOS compatible device tree found. Copying has been cancelled..";
        unset check_los_dt
        fi;
        fi;
        check_tw_dt=$(basename twrp-device-tree)
        if [ -f "$check_tw_dt" ]; then
        cp -r twrp-device-tree /home/Auto-Dumper
        if [ ! -f "$check_tw_dt" ]; then
        echo "No TWRP compatible device tree found. Copying has been cancelled..";
        fi;
        fi;
        sudo rm -rf .git
        git init
        git branch -M android-${{ env.AV }}
        git remote add origin https://${{ secrets.GITLAB_TOKEN_NAME }}:${{ secrets.GITLAB_TOKEN }}@gitlab.com/${{ env.UN }}/dump_${{ env.DB }}_${{ env.DCN }}.git
        git add .
        git commit -s -m "${{ env.DCN }}: ROM Dump"
        git push -u origin android-${{ env.AV }}
        cd /home/Auto-Dumper/DumprX
        sudo rm -rf out

    - name: Uploading LineageOS Device Tree
      if: |
        ${{env.LOT}} != null
      run: |
        cd /home/Auto-Dumper
        wget https://raw.githubusercontent.com/YZBruh/Auto-Firmware-Dumper/master/scripts/control_lineage_dt.sh
        sudo chmod 777 control_lineage_dt.sh
        ./control_lineage_dt.sh

    - name: Uploading TWRP Device Tree
      if: |
        ${{env.TWT}} != null
      run: |
        cd /home/Auto-Dumper
        wget https://raw.githubusercontent.com/YZBruh/Auto-Firmware-Dumper/master/scripts/control_twrp_dt.sh
        sudo chmod 777 control_twrp_dt.sh
        ./control_twrp_dt.sh
